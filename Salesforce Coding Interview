https://www.salesforceben.com/relationships-in-salesforce/

There are 6 types of relationships in salesforce
1. Lookup Relationships

Loosely coupled relationship. 
Connect one object to another in a one-to-many fashion.

If parent gets deleted this does not mean the child gets deleted and vice versa.
Standard object record can be on the detail side of a custom object in a lookup relationship.
You can have a maximum of 40 lookups on an object.


2. Master-Detail Relationship

Strongly coupled relationship – meaning if the parent is deleted, so are the child records. (Cascade delete.)
Parent record to control child record attributes, such as sharing and visibility. 

Allow reparenting on the child object will allow to change the parent object records. 
weet spot with master-detail relationships is that you can create roll-up summary fields! 
Note that a single object can have a maximum of two master-detail relationships.
Standard object record cannot be a child.

3. Many-to-Many Relationships
Situation where it is required you have many of one record related to many of another. 
Duplicating the lookup field a number of times on each object is not the best practice and will get very messy.
This is where we should leverage Junction Objects.

Junction Object - 

Instead of lookup we can use junction object.
This object is created by using master detail relation on child objects to parent object.
In junction:
The child here is the junction object. And the two main objects is the master.
There is also an example within 'standard' Salesforce objects with Opportunity Products. 
If you want to assign Products to a certain Salesforce Opportunity, you will need to use the Opportunity Line items object (a junction object).


4. Self Relationship

Let’s say you have a campaign that is a part of a bigger campaign.
Multiple child campaigns relate to the main parent campaign.  (known as a Campaign Hierarchy).
Like a child quote created from a parent quote.
Will learn about campaign heirarchy later.

Day 2

Salesforce User Management

 User object is likely one of the key standard Salesforce objects.
1. Types of Users in Salesforce
Depending on the Salesforce products you use within your org, there may be internal as well as external users.
Imply two different license types: Salesforce User License and Experience Cloud License.

Salesforce Users License:

Types of Salesforce Licenses

A Salesforce license is fundamentally a concept of authorization, not authentication. 
A license dictates what a user is authorized to access within the Salesforce ecosystem, such as features, products, and objects.
Salesforce licenses are allocated to individual users, giving them access to various Salesforce products and features.

Salesforce Licenses: These are user-specific and provide a baseline level of access to products and features, 
                     which can be further adjusted through profiles, permission sets, and the role hierarchy. 

Salesforce User Licenses vs. Salesforce Feature Licenses

1. Salesforce User Licenses: Almost 24 types
Determine the baseline of the features a user can access.
A user may only have one user license. Examples include Salesforce, Identity, and Platform Starter. 

2. Salesforce Feature Licenses:
Entitle a user to access an additional feature that’s not included with their user license (base edition).
Marketing User, Flow User, Knowledge User, and Service Cloud User etc.

How the access are granted:
Company decides to purchase Salesforce → 
Choose an edition → 
Purchase licenses → 
Assign user licenses to users → 
Assign feature licenses (optional) – access to features that are not included with the base edition. 

3. Salesforce Platform Licenses:

Platform licenses are available in Enterprise and Unlimited editions.
Platform licenses include accounts, contacts, and reports, as well as the automation tools such as
 e.g. Process Builder, Flow, and Apex).

4. Salesforce Identity Licenses
5. Salesforce Einstein Licenses
6. Salesforce Experience Cloud (Community) Licenses
   There are five license types:

   External App
   Customer Community
   Customer Community Plus
   Partner Community
   Channel

7. Salesforce Integration User Licenses

Designed for system-to-system integrations, as it only provides the user with API access.
Simply put, your instance’s functionality or data cannot be accessed through the user interface by users who are assigned this license type.

Designed for system-to-system integrations, as it only provides the user with API access. 
Simply put, your instance’s functionality or data cannot be accessed through the user interface by users who are assigned this license type.


8. Marketing Cloud Licenses
9. Account Engagement (Pardot) Licenses

+----------------------------------------------------------------------------------------------+

Salesforce Architechture

+-----------------------------+
|     User Interface Layer    |
+-----------------------------+
|        Logic Layer          |
+-----------------------------+
|         Data Layer          |
+-----------------------------+
|         API Layer           |
+-----------------------------+
|       Metadata Layer        |
+-----------------------------+
| Einstein 1 Platform (Core)  |
+-----------------------------+
| Multitenant Cloud Platform  |
+-----------------------------+


Step	Topic	Why This Order Matters
1️⃣	Profiles & Permission Sets	Controls object-level and field-level access. Foundation for what users can see/do.
2️⃣	OWD (Organization-Wide Defaults)	Sets record-level access baseline. Defines how broadly records are shared by default.
3️⃣	Role Hierarchy	Opens access vertically (managers see subordinates’ records). Builds on OWD.
4️⃣	Sharing Rules	Opens access horizontally (peer-level sharing). Refines OWD for specific conditions.
5️⃣	Manual Sharing	User-controlled sharing for individual records. Last layer of flexibility.


Salesforce Security Model:
All the above topics fall under security model of the salesforce.

Setup:
Users -> All the security options are present under the Users tab so these all are user specific.

Permission Set Groups

Permission Sets

Profiles

Public Groups

Queues

Roles

User Access Policies

User Management Settings

Users

What are the differences between Salesforce Roles and Profiles?
"Roles see, profiles do".

What is a Salesforce Profile?

Profiles control what users can do in your Salesforce org. This can be referred to as CRED:
C = create
R = read
E = edit
D = delete

System administrator is a profile.

It determines:
Which objects (e.g., Leads, Opportunities, Accounts) the user can access
What actions they can perform on those objects (Create, Read, Edit, Delete — aka CRUD)
Which fields are visible or editable
Which tabs, apps, and page layouts are available
System permissions (e.g., “Modify All Data”, “Run Reports”, “API Access”)
Every Salesforce user must be assigned exactly one profile, which acts as their baseline access configuration.
So to check if the user has the permission to see the object or 
not first go to the Profiles and check under standard or custom object permissions.


"Profiles are designed to group users into functions, for example, ‘Sales’, ‘Support’ etc."

*-----------------------------------------------------------------*
Salesforce license
Standard User License - Salesforce, Platform user and all.
Profiles - Object Crud access - App konse object ke records pr operations perform kr sakte ho. Fields and all. Read kr sakte ho, records create lr sakte ho and all.

System admin ek profile he:

Wo dene se hum authorization kr rahe he ek user ko ki wo kya kya access kr sakta he, and wo kya kya records pr crud operations kr sakta he.

So its just permission to do work on data table. Or we can say it is a limitation that what all work a user can do on the database data.
*-----------------------------------------------------------------*

For fields -

Field-Level Security	Determines visibility/editability of individual fields.  ( Read and edit access can be controlled on specific fields )
We can either view a field or row in table like department is visible or not.
And we can edit this department field or not - Like Computer science to Mechanical can be assigned or not.

Only Required Fields and master-detail fields on child (Always 'Required' By default.) cant be controlled on field level security in salesforce.
They are always Readable and editable.

What About Permission Sets?

Permission sets could be considered add-ons for profiles.
Profiles are basically a group which has some permissions. A user is assigned this means now whole group has access to those stuff.
But what if a user from this group needs to be given some special access. In that case we provide permission set to that user.

Profiles - Accesses of a group.
Permission Set - Special or add on access to the user assigned to a particular profile.
In order to grant a very specific ability to a user, you obviously don’t want to create a whole new profile.

+-------------------------------------------------------------------------------------------------+

Sharing Settings:

Profiles control what a user can do in Salesforce (permissions), while Roles control what data a user can see (record visibility).

2️⃣	OWD (Organization-Wide Defaults)	Sets record-level access baseline. Defines how broadly records are shared by default.

Now we can control the record visibility as well in the salesforce. But why?
We want to control the security of the records the users "dont own".
OWD is a key part of Salesforce’s "record-level" security model.

Why It’s Needed:

Protect sensitive data: Prevent users from seeing or editing records they shouldn’t.

Establish minimum access: Define what the most restricted user can see or do.

Enable layered sharing: Acts as the foundation for more advanced sharing mechanisms like roles, sharing rules, and teams.

Access Level	Description:
Private	Users can only see records they own.
Public Read Only	Users can view all records but only edit their own.
Public Read/Write	Users can view and edit all records.
Controlled by Parent	Access is determined by the parent object (used for child relationships).
Can configure OWD for both standard objects (like Account, Opportunity) and custom objects.

Yes, in Salesforce, objects that are part of a Master-Detail relationship automatically have their 
Organization-Wide Defaults (OWD) set to “Controlled by Parent".

































